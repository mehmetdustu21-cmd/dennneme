{% comment %}
  extensions/virtual-try-on-button/blocks/app-block.liquid
  Browse bölümünde ürünleri göstermek için
{% endcomment %}

<div id="virtual-tryon-widget" style="max-width: 1400px; margin: 40px auto; font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', sans-serif;">
  <style>
    .vto-container {
      display: grid;
      grid-template-columns: 1fr 1fr 1fr;
      gap: 32px;
      padding: 20px;
      background: {% if section.settings.background_type == 'transparent' %}transparent{% elsif section.settings.background_type == 'white' %}#fff{% elsif section.settings.background_type == 'theme_color' %}var(--color-background, #fff){% else %}{{ section.settings.custom_background_color }}{% endif %};
      {% if section.settings.show_border %}border: 1px solid {{ section.settings.border_color }};{% endif %}
      border-radius: {{ section.settings.border_radius }}px;
    }
    
    /* Mobil için tamamen dikey sıralı düzen - FORCE OVERRIDE */
    @media only screen and (max-width: 768px) {
      #virtual-tryon-widget {
        margin: 20px auto !important;
      }
      
      .vto-container {
        display: flex !important;
        flex-direction: column !important;
        gap: 20px !important;
        padding: 12px 8px !important;
      }
      
      /* Panelleri sıralı göster */
      .vto-panel {
        width: 100% !important;
        min-height: auto !important;
        order: 0;
      }
      
      /* 1. Garment (Ürün Seçimi) */
      .vto-panel:nth-child(1) {
        order: 1 !important;
      }
      
      /* 2. Model Seçimi - Result panelini aşağı al */
      .vto-panel:nth-child(2) {
        order: 3 !important;
      }
      
      /* 3. Selected Model - Bunu result'tan önce göster */
      .vto-panel:nth-child(3) {
        order: 2 !important;
      }
      
      .vto-panel-header {
        font-size: 18px !important;
        font-weight: 600 !important;
        margin-bottom: 16px !important;
        text-align: center !important;
        color: #000 !important;
        padding-bottom: 12px !important;
        border-bottom: 2px solid #e5e5e5 !important;
      }
      
      .vto-search {
        font-size: 14px !important;
        padding: 12px !important;
        margin-bottom: 16px !important;
      }
      
      .vto-product-grid {
        grid-template-columns: 1fr !important;
        gap: 10px !important;
        max-height: 450px !important;
        padding: 8px 4px 12px 4px !important;
      }
      
      #virtual-tryon-widget .vto-product-item,
      .vto-container .vto-product-item,
      div.vto-product-item {
        border-radius: 10px !important;
        box-shadow: 0 2px 6px rgba(0,0,0,0.1) !important;
        display: flex !important;
        flex-direction: row !important;
        align-items: center !important;
        background: #fff !important;
        margin-bottom: 8px !important;
        overflow: visible !important;
      }
      
      #virtual-tryon-widget .vto-product-item img,
      .vto-container .vto-product-item img,
      div.vto-product-item img {
        height: 80px !important;
        width: 80px !important;
        min-width: 80px !important;
        max-width: 80px !important;
        object-fit: cover !important;
        border-radius: 10px 0 0 10px !important;
        flex-shrink: 0 !important;
      }
      
      #virtual-tryon-widget .vto-product-info,
      .vto-container .vto-product-info,
      div.vto-product-info {
        padding: 10px 12px !important;
        flex: 1 !important;
        display: flex !important;
        flex-direction: column !important;
        justify-content: center !important;
        overflow: hidden !important;
      }
      
      .vto-product-title {
        font-size: 14px !important;
        font-weight: 600 !important;
        min-height: auto !important;
        margin-bottom: 6px !important;
        line-height: 1.3 !important;
        display: -webkit-box !important;
        -webkit-line-clamp: 2 !important;
        -webkit-box-orient: vertical !important;
        overflow: hidden !important;
      }
      
      .vto-product-price {
        font-size: 14px !important;
        font-weight: 700 !important;
        color: #2563eb !important;
      }
      
      .vto-model-grid {
        grid-template-columns: repeat(3, 1fr) !important;
        gap: 10px !important;
      }
      
      .vto-model-item img {
        height: 120px !important;
      }
      
      .vto-generate-btn {
        padding: 16px !important;
        font-size: 16px !important;
        font-weight: 600 !important;
        margin-bottom: 20px !important;
      }
      
      .vto-result-area {
        min-height: 300px !important;
        padding: 20px !important;
      }
      
      .vto-tabs {
        justify-content: center !important;
        gap: 12px !important;
        margin-bottom: 20px !important;
      }
      
      .vto-tab {
        padding: 12px 20px !important;
        font-size: 15px !important;
      }
      
      .vto-selected-model {
        padding: 16px !important;
      }
    }
    
    /* Çok küçük ekranlar için - Ultra kompakt */
    @media (max-width: 480px) {
      .vto-container {
        padding: 12px !important;
        gap: 20px !important;
      }
      
      .vto-panel-header {
        font-size: 16px !important;
      }
      
      .vto-product-grid {
        grid-template-columns: 1fr !important;
        gap: 12px !important;
        max-height: 400px !important;
        padding: 0 6px 10px 6px !important;
      }
      
      .vto-product-item {
        display: flex !important;
        flex-direction: row !important;
        border-radius: 8px !important;
        margin-bottom: 6px !important;
      }
      
      .vto-product-item img {
        height: 70px !important;
        width: 70px !important;
        min-width: 70px !important;
        border-radius: 8px 0 0 8px !important;
      }
      
      .vto-product-info {
        padding: 8px 10px !important;
      }
      
      .vto-product-title {
        font-size: 13px !important;
        margin-bottom: 4px !important;
        line-height: 1.3 !important;
      }
      
      .vto-product-price {
        font-size: 13px !important;
      }
      
      .vto-model-grid {
        grid-template-columns: repeat(2, 1fr) !important;
        gap: 8px !important;
      }
      
      .vto-model-item img {
        height: 100px !important;
      }
      
      .vto-search {
        font-size: 13px !important;
        padding: 10px !important;
      }
      
      .vto-generate-btn {
        padding: 14px !important;
        font-size: 15px !important;
      }
      
      .vto-product-title {
        font-size: 13px !important;
      }
      
      .vto-product-price {
        font-size: 11px !important;
      }
      
      .vto-tab {
        padding: 10px 16px !important;
        font-size: 14px !important;
      }
    }
    
    .vto-panel {
      display: flex;
      flex-direction: column;
      min-height: 500px;
    }
    
    .vto-panel-header {
      font-size: 16px;
      font-weight: 500;
      color: #000;
      margin-bottom: 16px;
      padding-bottom: 12px;
      border-bottom: 1px solid #e5e5e5;
    }
    
    .vto-search {
      width: 100%;
      padding: 10px 12px;
      border: 1px solid #e5e5e5;
      border-radius: 4px;
      font-size: 14px;
      margin-bottom: 16px;
    }
    
    .vto-search:focus {
      outline: none;
      border-color: #000;
    }
    
    .vto-product-grid {
      display: grid;
      grid-template-columns: repeat(2, 1fr);
      gap: 12px;
      overflow-y: auto;
      max-height: 600px;
      padding-bottom: 10px;
    }
    
    .vto-product-item {
      cursor: pointer;
      border: 2px solid transparent;
      border-radius: 8px;
      transition: all 0.2s;
      overflow: hidden;
      background: #fff;
      box-shadow: 0 2px 4px rgba(0,0,0,0.1);
    }
    
    .vto-product-item:hover {
      border-color: #000;
    }
    
    .vto-product-item.selected {
      border-color: #000;
      background: #fff;
    }
    
    .vto-product-item img {
      width: 100%;
      height: 160px;
      object-fit: cover;
      display: block;
    }
    
    .vto-product-info {
      padding: 12px;
      background: #fff;
    }
    
    .vto-product-title {
      font-size: 14px;
      font-weight: 600;
      color: #000;
      margin: 0 0 6px 0;
      line-height: 1.3;
      min-height: 36px;
      display: -webkit-box;
      -webkit-line-clamp: 2;
      -webkit-box-orient: vertical;
      overflow: hidden;
    }
    
    .vto-product-price {
      font-size: 14px;
      font-weight: 700;
      color: #000;
    }
    
    .vto-result-area {
      background: {% if section.settings.background_type == 'transparent' %}transparent{% elsif section.settings.background_type == 'white' %}#f9f9f9{% elsif section.settings.background_type == 'theme_color' %}var(--color-background-light, #f9f9f9){% else %}{{ section.settings.custom_background_color | color_modify: 'alpha', 0.1 }}{% endif %};
      border-radius: {{ section.settings.border_radius }}px;
      padding: 20px;
      min-height: 400px;
      display: flex;
      align-items: center;
      justify-content: center;
      flex-direction: column;
    }
    
    .vto-generate-btn {
      width: 100%;
      padding: 14px;
      background: #000;
      color: #fff;
      border: none;
      border-radius: 4px;
      font-size: 15px;
      font-weight: 500;
      cursor: pointer;
      margin-bottom: 20px;
      transition: background 0.2s;
    }
    
    .vto-generate-btn:hover {
      background: #333;
    }
    
    .vto-generate-btn:disabled {
      background: #ccc;
      cursor: not-allowed;
    }
    
    .vto-model-grid {
      display: grid;
      grid-template-columns: repeat(4, 1fr);
      gap: 12px;
      margin-top: 16px;
    }
    
    .vto-model-item {
      cursor: pointer;
      border: 2px solid transparent;
      border-radius: 4px;
      transition: all 0.2s;
      overflow: hidden;
    }
    
    .vto-model-item:hover {
      border-color: #000;
    }
    
    .vto-model-item.selected {
      border-color: #000;
    }
    
    .vto-model-item img {
      width: 100%;
      height: 140px;
      object-fit: cover;
      display: block;
    }
    
    .vto-upload-card {
      transition: all 0.2s;
    }
    
    .vto-upload-card:hover {
      border-color: #000;
      background: #ebebeb !important;
    }
    
    .vto-tabs {
      display: flex;
      gap: 8px;
      margin-bottom: 16px;
      border-bottom: 1px solid #e5e5e5;
    }
    
    .vto-tab {
      padding: 10px 16px;
      background: none;
      border: none;
      border-bottom: 2px solid transparent;
      cursor: pointer;
      font-size: 14px;
      font-weight: 500;
      color: #666;
      transition: all 0.2s;
    }
    
    .vto-tab.active {
      color: #000;
      border-bottom-color: #000;
    }
    
    .vto-selected-model {
      background: #f9f9f9;
      border-radius: 4px;
      padding: 20px;
      text-align: center;
    }
    
    .vto-selected-model img {
      max-width: 100%;
      height: auto;
      border-radius: 4px;
    }
    
    .vto-placeholder {
      color: #999;
      font-size: 14px;
    }
  </style>

  <div class="vto-container">
    <!-- Sol Panel: Garment (Browse) -->
    <div class="vto-panel">
      <div class="vto-panel-header">Garment</div>
      <input 
        type="text" 
        class="vto-search" 
        id="vto-search-input"
        placeholder="Search for products..."
      >
      
      <div class="vto-product-grid" id="vto-product-grid">
        <div class="vto-placeholder" style="grid-column: 1 / -1; text-align: center; padding: 40px;">
          Loading products...
        </div>
      </div>
    </div>

    <!-- Orta Panel: Result -->
    <div class="vto-panel">
      <div class="vto-panel-header">Result</div>
      
      <button class="vto-generate-btn" id="vto-generate-btn" disabled>
        Generate Preview
      </button>
      
      <div class="vto-result-area" id="vto-result-area">
        <div class="vto-placeholder">Select a model to generate preview</div>
      </div>
      
      <div class="vto-tabs">
        <button class="vto-tab active" data-tab="model">Model</button>
        <button class="vto-tab" data-tab="outfit">Outfit</button>
      </div>
      
      <div id="vto-model-tab" class="vto-model-grid">
        <!-- Upload Custom Model Card -->
        <div class="vto-model-item vto-upload-card" id="vto-upload-card" style="background: #f5f5f5; display: flex; align-items: center; justify-content: center; position: relative;">
          <input type="file" id="vto-custom-model-input" accept="image/*" style="display: none;">
          <div style="text-align: center; color: #666;">
            <div style="font-size: 48px; font-weight: 300; margin-bottom: 8px;">+</div>
            <div style="font-size: 12px;">Kendi Fotoğrafını<br>Yükle</div>
          </div>
        </div>
        
        <div class="vto-model-item" data-model="male-1" data-model-url="https://res.cloudinary.com/ddec9wrgy/image/upload/v1761051822/male-1_tgqkkw.png">
          <img src="https://res.cloudinary.com/ddec9wrgy/image/upload/v1761051822/male-1_tgqkkw.png" alt="Male Model 1" loading="lazy">
        </div>
        <div class="vto-model-item" data-model="male-2" data-model-url="https://res.cloudinary.com/ddec9wrgy/image/upload/v1761051822/male-2_lq1tq4.png">
          <img src="https://res.cloudinary.com/ddec9wrgy/image/upload/v1761051822/male-2_lq1tq4.png" alt="Male Model 2" loading="lazy">
        </div>
        <div class="vto-model-item" data-model="male-3" data-model-url="https://res.cloudinary.com/ddec9wrgy/image/upload/v1761051823/male-3_g65gss.png">
          <img src="https://res.cloudinary.com/ddec9wrgy/image/upload/v1761051823/male-3_g65gss.png" alt="Male Model 3" loading="lazy">
        </div>
        <div class="vto-model-item" data-model="male-4" data-model-url="https://res.cloudinary.com/ddec9wrgy/image/upload/v1761051825/male-4_i2cycp.png">
          <img src="https://res.cloudinary.com/ddec9wrgy/image/upload/v1761051825/male-4_i2cycp.png" alt="Male Model 4" loading="lazy">
        </div>
        <div class="vto-model-item" data-model="male-5" data-model-url="https://res.cloudinary.com/ddec9wrgy/image/upload/v1761051821/male-5_e8xch5.png">
          <img src="https://res.cloudinary.com/ddec9wrgy/image/upload/v1761051821/male-5_e8xch5.png" alt="Male Model 5" loading="lazy">
        </div>
        <div class="vto-model-item" data-model="female-2" data-model-url="https://res.cloudinary.com/ddec9wrgy/image/upload/v1761051822/female-2_g1ptie.png">
          <img src="https://res.cloudinary.com/ddec9wrgy/image/upload/v1761051822/female-2_g1ptie.png" alt="Female Model 2" loading="lazy">
        </div>
        <div class="vto-model-item" data-model="female-3" data-model-url="https://res.cloudinary.com/ddec9wrgy/image/upload/v1761051823/female-3_odrhyn.png">
          <img src="https://res.cloudinary.com/ddec9wrgy/image/upload/v1761051823/female-3_odrhyn.png" alt="Female Model 3" loading="lazy">
        </div>
        <div class="vto-model-item" data-model="female-4" data-model-url="https://res.cloudinary.com/ddec9wrgy/image/upload/v1761051821/female-4_n1crei.png">
          <img src="https://res.cloudinary.com/ddec9wrgy/image/upload/v1761051821/female-4_n1crei.png" alt="Female Model 4" loading="lazy">
        </div>
        <div class="vto-model-item" data-model="female-5" data-model-url="https://res.cloudinary.com/ddec9wrgy/image/upload/v1761051822/female-5_prlopn.png">
          <img src="https://res.cloudinary.com/ddec9wrgy/image/upload/v1761051822/female-5_prlopn.png" alt="Female Model 5" loading="lazy">
        </div>
      </div>
      
      <div id="vto-outfit-tab" class="vto-model-grid" style="display: none;">
        <div class="vto-placeholder" style="grid-column: 1 / -1; text-align: center; padding: 20px;">
          Outfit variations will appear here
        </div>
      </div>
    </div>

    <!-- Sağ Panel: Selected Model -->
    <div class="vto-panel">
      <div class="vto-panel-header">Selected Model</div>
      <div class="vto-selected-model" id="vto-selected-model">
        <div class="vto-placeholder">No model selected</div>
      </div>
    </div>
  </div>

  <script>
    (function() {
      let selectedProduct = null;
      let selectedModel = null;
      let selectedModelImage = null;
      let allProducts = [];
      
      // Mevcut ürün bilgisi (eğer product page'deysek)
      const currentProduct = {
        {% if product %}
        id: {{ product.id | json }},
        image: {{ product.featured_image.src | json }},
        handle: {{ product.handle | json }}
        {% else %}
        id: null,
        image: null,
        handle: null
        {% endif %}
      };

      // Load products from Shopify
      async function loadProducts() {
        const productGrid = document.getElementById('vto-product-grid');
        
        try {
          // Shopify'den ürünleri al
          const response = await fetch('/collections/all/products.json?limit=20');
          const data = await response.json();
          
          if (data.products && data.products.length > 0) {
            allProducts = data.products;
            renderProducts(data.products);
          } else {
            productGrid.innerHTML = '<div class="vto-placeholder" style="grid-column: 1 / -1; text-align: center; padding: 40px;">No products found</div>';
          }
        } catch (error) {
          console.error('Error loading products:', error);
          productGrid.innerHTML = '<div class="vto-placeholder" style="grid-column: 1 / -1; text-align: center; padding: 40px; color: red;">Error loading products</div>';
        }
      }

      // Render products in the grid
      function renderProducts(products) {
        const productGrid = document.getElementById('vto-product-grid');
        
        if (products.length === 0) {
          productGrid.innerHTML = '<div class="vto-placeholder" style="grid-column: 1 / -1; text-align: center; padding: 40px;">No products found</div>';
          return;
        }

        const productsHTML = products.map(product => {
          const image = product.images && product.images.length > 0 
            ? product.images[0].src 
            : 'https://via.placeholder.com/300x300?text=No+Image';
          
          const price = product.variants && product.variants.length > 0 
            ? `$${parseFloat(product.variants[0].price / 100).toFixed(2)}`
            : 'N/A';

          return `
            <div class="vto-product-item" 
                 data-product-id="${product.id}" 
                 data-product-image="${image}">
              <img src="${image}" alt="${product.title}" loading="lazy">
              <div class="vto-product-info">
                <div class="vto-product-title">${product.title}</div>
                <div class="vto-product-price">${price}</div>
              </div>
            </div>
          `;
        }).join('');

        productGrid.innerHTML = productsHTML;
        
        // Re-attach event listeners for new products
        attachProductListeners();
      }

      // Attach click listeners to product items
      function attachProductListeners() {
        document.querySelectorAll('.vto-product-item').forEach(item => {
          item.addEventListener('click', function() {
            document.querySelectorAll('.vto-product-item').forEach(p => p.classList.remove('selected'));
            this.classList.add('selected');
            selectedProduct = {
              id: this.dataset.productId,
              image: this.dataset.productImage
            };
            updateGenerateButton();
          });
        });
      }

      // Initialize products when page loads
      loadProducts();

      // Custom model upload functionality
      const uploadCard = document.getElementById('vto-upload-card');
      const customModelInput = document.getElementById('vto-custom-model-input');
      
      uploadCard.addEventListener('click', function() {
        customModelInput.click();
      });
      
      customModelInput.addEventListener('change', function(e) {
        const file = e.target.files[0];
        if (file && file.type.startsWith('image/')) {
          const reader = new FileReader();
          
          reader.onload = function(event) {
            const imageUrl = event.target.result;
            
            // Upload kartını güncelle - yüklenen görseli göster
            uploadCard.innerHTML = `
              <img src="${imageUrl}" alt="Custom Model" style="width: 100%; height: 140px; object-fit: cover; display: block;">
              <div style="position: absolute; top: 4px; right: 4px; background: rgba(0,0,0,0.6); color: white; border-radius: 50%; width: 24px; height: 24px; display: flex; align-items: center; justify-content: center; font-size: 16px; cursor: pointer;" class="vto-remove-custom">×</div>
            `;
            
            // Kartı seçili yap
            document.querySelectorAll('.vto-model-item').forEach(m => m.classList.remove('selected'));
            uploadCard.classList.add('selected');
            
            // Model olarak ayarla
            selectedModel = 'custom-user-photo';
            selectedModelImage = imageUrl;
            
            // Sağ panelde göster
            document.getElementById('vto-selected-model').innerHTML = 
              `<img src="${imageUrl}" alt="Your Photo">`;
            
            updateGenerateButton();
            
            // Remove butonuna event ekle
            const removeBtn = uploadCard.querySelector('.vto-remove-custom');
            if (removeBtn) {
              removeBtn.addEventListener('click', function(e) {
                e.stopPropagation();
                
                // Upload kartını eski haline döndür
                uploadCard.innerHTML = `
                  <input type="file" id="vto-custom-model-input" accept="image/*" style="display: none;">
                  <div style="text-align: center; color: #666;">
                    <div style="font-size: 48px; font-weight: 300; margin-bottom: 8px;">+</div>
                    <div style="font-size: 12px;">Kendi Fotoğrafını<br>Yükle</div>
                  </div>
                `;
                
                // Event listener'ı tekrar ekle
                const newInput = uploadCard.querySelector('#vto-custom-model-input');
                newInput.addEventListener('change', customModelInput.onchange);
                uploadCard.addEventListener('click', function() {
                  newInput.click();
                });
                
                // Seçimi temizle
                uploadCard.classList.remove('selected');
                selectedModel = null;
                selectedModelImage = null;
                
                document.getElementById('vto-selected-model').innerHTML = 
                  '<div class="vto-placeholder">No model selected</div>';
                
                updateGenerateButton();
              });
            }
          };
          
          reader.readAsDataURL(file);
        }
      });

      // Model selection
      document.querySelectorAll('.vto-model-item:not(.vto-upload-card)').forEach(item => {
        item.addEventListener('click', function() {
          document.querySelectorAll('.vto-model-item').forEach(m => m.classList.remove('selected'));
          this.classList.add('selected');
          
          selectedModel = this.dataset.model;
          selectedModelImage = this.dataset.modelUrl;
          
          // Sağ panelde göster
          document.getElementById('vto-selected-model').innerHTML = 
            `<img src="${selectedModelImage}" alt="${selectedModel}">`;
          
          updateGenerateButton();
        });
      });

      // Tab switching
      document.querySelectorAll('.vto-tab').forEach(tab => {
        tab.addEventListener('click', function() {
          document.querySelectorAll('.vto-tab').forEach(t => t.classList.remove('active'));
          this.classList.add('active');
          
          const tabName = this.dataset.tab;
          document.getElementById('vto-model-tab').style.display = tabName === 'model' ? 'grid' : 'none';
          document.getElementById('vto-outfit-tab').style.display = tabName === 'outfit' ? 'grid' : 'none';
        });
      });

      // Generate button state
      function updateGenerateButton() {
        const btn = document.getElementById('vto-generate-btn');
        if (selectedProduct && selectedModel) {
          btn.disabled = false;
        } else {
          btn.disabled = true;
        }
      }

      // Generate preview
      document.getElementById('vto-generate-btn').addEventListener('click', async function() {
        if (!selectedProduct || !selectedModel) return;
        
        const btn = this;
        const resultArea = document.getElementById('vto-result-area');
        
        btn.disabled = true;
        btn.textContent = 'Generating...';
        
        // Progress bar ve adımlar
        resultArea.innerHTML = `
          <div style="width: 100%; max-width: 400px; text-align: center;">
            <div style="font-size: 16px; font-weight: 500; color: #000; margin-bottom: 20px;" id="vto-progress-text">
              Analyzing your photo...
            </div>
            
            <div style="width: 100%; height: 6px; background: #f0f0f0; border-radius: 3px; overflow: hidden; margin-bottom: 20px;">
              <div id="vto-progress-bar" style="height: 100%; background: linear-gradient(90deg, #000, #333); width: 0%; transition: width 0.5s ease;"></div>
            </div>
            
            <div style="font-size: 13px; color: #666; line-height: 1.8;">
              <div id="step-1" style="color: #000; font-weight: 500;">✓ Analyzing your photo...</div>
              <div id="step-2" style="color: #999;">Detecting body pose...</div>
              <div id="step-3" style="color: #999;">Processing garment...</div>
              <div id="step-4" style="color: #999;">Applying virtual try-on...</div>
              <div id="step-5" style="color: #999;">Finalizing result...</div>
            </div>
          </div>
        `;
        
        // Progress animasyonu
        const progressBar = document.getElementById('vto-progress-bar');
        const progressText = document.getElementById('vto-progress-text');
        
        const steps = [
          { progress: 20, text: 'Detecting body pose...', step: 2, delay: 10000 },
          { progress: 40, text: 'Processing garment...', step: 3, delay: 25000 },
          { progress: 60, text: 'Applying virtual try-on...', step: 4, delay: 40000 },
          { progress: 80, text: 'Finalizing result...', step: 5, delay: 55000 }
        ];
        
        steps.forEach(({ progress, text, step, delay }) => {
          setTimeout(() => {
            progressBar.style.width = progress + '%';
            progressText.textContent = text;
            
            // Önceki adımları yeşil yap
            for (let i = 1; i < step; i++) {
              const prevStep = document.getElementById(`step-${i}`);
              if (prevStep) {
                prevStep.style.color = '#10B981';
              }
            }
            
            // Mevcut adımı vurgula
            const currentStep = document.getElementById(`step-${step}`);
            if (currentStep) {
              currentStep.style.color = '#000';
              currentStep.style.fontWeight = '500';
            }
          }, delay);
        });
        
        try {
          const response = await fetch('/apps/virtual-tryon/generate', {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json',
            },
            body: JSON.stringify({
              garment_image: selectedProduct.image,
              model_image: selectedModelImage,
              model_id: selectedModel
            })
          });
          
          console.log('Response status:', response.status);
          console.log('Response headers:', Object.fromEntries(response.headers.entries()));
          
          // Response'un JSON olup olmadığını kontrol et
          const contentType = response.headers.get('content-type');
          if (!contentType || !contentType.includes('application/json')) {
            const textResponse = await response.text();
            console.error('Non-JSON response:', textResponse);
            resultArea.innerHTML = `<div class="vto-placeholder" style="color: red;">Server error: Invalid response format</div>`;
            return;
          }
          
          let data;
          try {
            data = await response.json();
            console.log('Response data:', data);
          } catch (jsonError) {
            console.error('JSON parse error:', jsonError);
            resultArea.innerHTML = `<div class="vto-placeholder" style="color: red;">Server error: Failed to parse response</div>`;
            return;
          }
          
          if (data.success && data.result_url) {
            // Son adımı tamamla
            const progressBar = document.getElementById('vto-progress-bar');
            const progressText = document.getElementById('vto-progress-text');
            if (progressBar) progressBar.style.width = '100%';
            if (progressText) progressText.textContent = 'Complete!';
            
            // Tüm adımları yeşil yap
            for (let i = 1; i <= 5; i++) {
              const step = document.getElementById(`step-${i}`);
              if (step) step.style.color = '#10B981';
            }
            
            // Kısa bir gecikme sonra sonucu göster
            setTimeout(() => {
              // Rastgele beden önerisi
              const sizes = ['XS', 'S', 'M', 'L', 'XL', 'XXL'];
              const recommendedSize = sizes[Math.floor(Math.random() * 3) + 1]; // Genelde S, M, L öner
              
              resultArea.innerHTML = `
                <div style="width: 100%; max-width: 500px;">
                  <img src="${data.result_url}" alt="Result" style="width: 100%; border-radius: 8px; box-shadow: 0 4px 12px rgba(0,0,0,0.1); margin-bottom: 20px;">
                  
                  <!-- Size Recommendation Card -->
                  <div style="background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); border-radius: 8px; padding: 20px; color: white; box-shadow: 0 4px 12px rgba(102, 126, 234, 0.3);">
                    <div style="display: flex; align-items: center; gap: 12px; margin-bottom: 12px;">
                      <div style="width: 40px; height: 40px; background: rgba(255,255,255,0.2); border-radius: 50%; display: flex; align-items: center; justify-content: center; font-size: 20px;">
                        🎯
                      </div>
                      <div>
                        <div style="font-size: 14px; opacity: 0.9;">AI Size Recommendation</div>
                        <div style="font-size: 24px; font-weight: 700; letter-spacing: 2px;">${recommendedSize}</div>
                      </div>
                    </div>
                    
                    <div style="background: rgba(255,255,255,0.15); border-radius: 6px; padding: 14px; margin-top: 12px;">
                      <div style="display: flex; align-items: flex-start; gap: 8px;">
                        <span style="font-size: 16px; margin-top: 2px;">ℹ️</span>
                        <div style="font-size: 13px; opacity: 0.95; line-height: 1.5;">
                          Size recommendation is currently in beta. Please refer to the product's size chart for accurate measurements.
                        </div>
                      </div>
                    </div>
                  </div>
                </div>
              `;
            }, 500);
          } else {
            const errorMsg = data.error || 'Unknown error';
            console.error('Generation failed:', errorMsg);
            resultArea.innerHTML = `
              <div style="text-align: center; padding: 40px;">
                <div style="font-size: 48px; margin-bottom: 16px;">⚠️</div>
                <div style="font-size: 16px; font-weight: 500; color: #DC2626; margin-bottom: 8px;">Generation Failed</div>
                <div style="font-size: 14px; color: #666;">${errorMsg}</div>
              </div>
            `;
          }
        } catch (error) {
          console.error('Network error:', error);
          resultArea.innerHTML = `
            <div style="text-align: center; padding: 40px;">
              <div style="font-size: 48px; margin-bottom: 16px;">⚠️</div>
              <div style="font-size: 16px; font-weight: 500; color: #DC2626; margin-bottom: 8px;">Network Error</div>
              <div style="font-size: 14px; color: #666;">${error.message}</div>
            </div>
          `;
        } finally {
          btn.disabled = false;
          btn.textContent = 'Generate Preview';
        }
      });

      // Search functionality
      document.getElementById('vto-search-input').addEventListener('input', function(e) {
        const searchTerm = e.target.value.toLowerCase();
        
        if (searchTerm === '') {
          // Show all products
          renderProducts(allProducts);
        } else {
          // Filter products
          const filteredProducts = allProducts.filter(product => 
            product.title.toLowerCase().includes(searchTerm)
          );
          renderProducts(filteredProducts);
        }
      });
    })();
  </script>
</div>

{% schema %}
{
  "name": "Virtual Try-On",
  "target": "section",
  "enabled_on": {
    "templates": ["*"]
  },
  "settings": [
    {
      "type": "header",
      "content": "Widget Settings"
    },
    {
      "type": "checkbox",
      "id": "enable_widget",
      "label": "Enable Virtual Try-On Widget",
      "default": true
    },
    {
      "type": "text",
      "id": "widget_title",
      "label": "Widget Title",
      "default": "Virtual Try-On"
    },
    {
      "type": "header",
      "content": "Background Settings"
    },
    {
      "type": "select",
      "id": "background_type",
      "label": "Background Type",
      "options": [
        {
          "value": "transparent",
          "label": "Transparent"
        },
        {
          "value": "white",
          "label": "White"
        },
        {
          "value": "theme_color",
          "label": "Theme Color"
        },
        {
          "value": "custom",
          "label": "Custom Color"
        }
      ],
      "default": "white"
    },
    {
      "type": "color",
      "id": "custom_background_color",
      "label": "Custom Background Color",
      "default": "#ffffff"
    },
    {
      "type": "checkbox",
      "id": "show_border",
      "label": "Show Border",
      "default": true
    },
    {
      "type": "color",
      "id": "border_color",
      "label": "Border Color",
      "default": "#e5e5e5"
    },
    {
      "type": "range",
      "id": "border_radius",
      "label": "Border Radius",
      "min": 0,
      "max": 20,
      "step": 1,
      "unit": "px",
      "default": 4
    },
    {
      "type": "header",
      "content": "Color Settings"
    },
    {
      "type": "color",
      "id": "primary_color",
      "label": "Primary Color",
      "default": "#000000"
    },
    {
      "type": "color",
      "id": "secondary_color",
      "label": "Secondary Color",
      "default": "#ffffff"
    },
    {
      "type": "range",
      "id": "font_size",
      "label": "Font Size",
      "min": 10,
      "max": 20,
      "step": 1,
      "unit": "px",
      "default": 14
    }
  ]
}
{% endschema %}