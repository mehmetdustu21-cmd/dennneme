// App Proxy route handler - Resource Route (Server-only)

export async function loader({ request, params }) {
  // Dinamik import - sadece server'da √ßalƒ±≈üƒ±r
  const { json } = await import("@remix-run/node");
  const fs = await import("fs");
  const path = await import("path");
  
  const url = new URL(request.url);
  const pathname = url.pathname;
  
  console.log("üîµ App Proxy Request:", {
    pathname,
    params,
    url: url.toString()
  });

  const filePath = pathname.replace('/api/proxy/', '');
  
  console.log("üìÅ Requested file:", filePath);

  try {
    // Handle model images
    if (filePath.startsWith('models/')) {
      const fileName = filePath.replace('models/', '');
      const imagePath = path.join(process.cwd(), 'public', 'models', fileName);
      
      console.log("üñºÔ∏è Looking for image at:", imagePath);

      if (fs.existsSync(imagePath)) {
        const imageBuffer = fs.readFileSync(imagePath);
        const ext = path.extname(fileName).toLowerCase();
        
        const contentTypes = {
          '.png': 'image/png',
          '.jpg': 'image/jpeg',
          '.jpeg': 'image/jpeg',
          '.gif': 'image/gif',
          '.webp': 'image/webp'
        };

        const contentType = contentTypes[ext] || 'application/octet-stream';
        
        console.log("‚úÖ Image found, serving with type:", contentType);

        return new Response(imageBuffer, {
          status: 200,
          headers: {
            'Content-Type': contentType,
            'Cache-Control': 'public, max-age=31536000, immutable',
            'Access-Control-Allow-Origin': '*'
          }
        });
      } else {
        console.error("‚ùå Image not found:", imagePath);
        
        const placeholder = `
          <svg xmlns="http://www.w3.org/2000/svg" width="400" height="600">
            <rect fill="#f3f4f6" width="400" height="600"/>
            <text x="50%" y="50%" text-anchor="middle" dy=".3em" fill="#9ca3af" font-size="24">
              ${fileName}
            </text>
            <text x="50%" y="60%" text-anchor="middle" dy=".3em" fill="#d1d5db" font-size="16">
              Image not found
            </text>
          </svg>
        `;
        
        return new Response(placeholder, {
          status: 200,
          headers: {
            'Content-Type': 'image/svg+xml',
            'Cache-Control': 'no-cache'
          }
        });
      }
    }

    // Handle API endpoints
    if (filePath.startsWith('api/')) {
      return json({
        success: true,
        message: "Virtual Try-On API",
        endpoint: filePath
      });
    }

    console.log("‚ö†Ô∏è Unknown proxy path:", filePath);
    return json({
      error: "Not Found",
      path: filePath,
      message: "The requested resource was not found"
    }, { status: 404 });

  } catch (error) {
    console.error("‚ùå Proxy error:", error);
    return json({
      error: "Internal Server Error",
      message: error.message
    }, { status: 500 });
  }
}

export async function action({ request }) {
  const { json } = await import("@remix-run/node");
  
  const url = new URL(request.url);
  const pathname = url.pathname;
  
  console.log("üîµ App Proxy POST Request:", pathname);

  try {
    const body = await request.json();
    
    if (pathname.includes('/api/generate')) {
      return json({
        success: true,
        message: "Generation endpoint"
      });
    }

    return json({
      error: "Endpoint not found"
    }, { status: 404 });

  } catch (error) {
    console.error("‚ùå Proxy action error:", error);
    return json({
      error: error.message
    }, { status: 500 });
  }
}